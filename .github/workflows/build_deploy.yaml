# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - aipowerdbackend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Node.js version
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18.x'

  #     - name: npm install, build, and test
  #       run: |
  #         npm install
  #         npm run build --if-present
  #         npm run test --if-present

  #     - name: Zip artifact for deployment
  #       run: zip release.zip ./* -r

  #     - name: Upload artifact for deployment job
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: node-app
  #         path: release.zip

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   permissions:
  #     id-token: write #This is required for requesting the JWT

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: node-app

  #     - name: Unzip artifact for deployment
  #       run: unzip release.zip
      
  #     - name: Login to Azure
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_58E38242CB13463888977D3C748B07A5 }}
  #         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_FF5C025E0AE54952B39D10E9908D9A83 }}
  #         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8645A754FADC4CC5B7BBB2725A042750 }}

  #     - name: 'Deploy to Azure Web App'
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v3
  #       with:
  #         app-name: 'aipowerdbackend'
  #         slot-name: 'Production'
  #         package: .

  build-and-deploy-backend-api:
    steps:
        - name: Connect to remote server
          uses: actions/ssh-action@v2
          with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # clone repository
        - name: Clone repository
          run: |
          git clone git@github.com:kaleabgirma/app-service-node-test.git
          cd app-service-node-test
          git checkout main
          git pull
    # build docker image
        - name: Build docker image
          run: |
            docker build -t backendapi:latest .
    # run docker compose command
        - name: Run docker compose
          run: |
            docker-compose up -d -f /opt/backendapi/docker-compose.yaml